@model Luxury_Shop.Models.AccountListViewModel

@{
    ViewBag.Title = "Quản lý đơn hàng";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.ti = ViewBag.Title;
}
<link href="~/Content/Admin/table.css" rel="stylesheet" />
<link href="~/Content/Admin/palisst.css" rel="stylesheet" />
<link href="~/Content/Admin/admin.css" rel="stylesheet" />
<h2>Quản lý đơn hàng</h2>

<div class="table-container">

    <table class="table">
        <tr>
            <th>
                Tên đăng nhập
            </th>
            <th>
                Tổng tiền
            </th>
            <th>
                Địa chỉ giao hàng
            </th>
            <th>
                Phương thanh toán
            </th>
            <th>
                Ngày đặt hàng
            </th>
            <th>
                Trạng thái
            </th>

        </tr>
        @foreach (var item in Model.listdonhang)
        {
            <tr id="order-@item.OrderID">
                <td>
                    @Html.DisplayFor(modelItem => item.User.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShippingAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentMethod)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    <select class="status-dropdown" data-order-id="@item.OrderID" onchange="updateStatus(@item.OrderID)">
                        <option value="Pending" @if (item.Status == "Pending") { <text> selected</text> }>Pending</option>
                        <option value="Shipped" @if (item.Status == "Shipped") { <text> selected</text> }>Shipped</option>
                        <option value="Completed" @if (item.Status == "Completed") { <text> selected</text> }>Completed</option>
                        <option value="Cancelled" @if (item.Status == "Cancelled") { <text> selected</text> }>Cancelled</option>
                    </select>
                </td>
            </tr>
        }
    </table>
</div>
<div class="pagination">
    @if (Model.PageNumber > 1)
    {
        <a href="@Url.Action("index", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize })" class="prev">Trước</a>
    }

    @for (int i = 1; i <= (int)Math.Ceiling((double)Model.TotalRecords / Model.PageSize); i++)
    {
        <a href="@Url.Action("index", new { pageNumber = i, pageSize = Model.PageSize })" class="@(i == Model.PageNumber ? "active" : "")">@i</a>
    }

    @if (Model.PageNumber < (int)Math.Ceiling((double)Model.TotalRecords / Model.PageSize))
    {
        <a href="@Url.Action("index", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize })" class="next">Tiếp theo</a>
    }
</div>@section Scripts {
    <script>
    // Hàm JavaScript để gửi yêu cầu AJAX khi chọn trạng thái
    function updateStatus(orderId) {
        // Sử dụng selector chính xác để lấy giá trị của dropdown
        var status = $(`#order-${orderId} .status-dropdown`).val(); // Lấy giá trị trạng thái từ dropdown

        if (!status) {
            console.error('Status is null or undefined');
            alert('Vui lòng chọn trạng thái');
            return;
        }

        // Gửi yêu cầu AJAX để cập nhật trạng thái đơn hàng
        $.ajax({
            url: '@Url.Action("UpdateStatus", "Quanlydonhang")',  // Đảm bảo URL này đúng
            type: 'POST',
            data: {
                orderId: orderId,
                status: status
            },
            success: function(response) {
                // Xử lý khi cập nhật thành công
                alert('Thay đổi trạng thái thành công!');
            },
            error: function(xhr, status, error) {
                // Hiển thị chi tiết lỗi để dễ dàng debug
                console.log("Error Status: " + status);
                console.log("Error Message: " + error);
                alert('Lỗi khi cập nhật trạng thái');
            }
        });
    }
    </script>

}